name: Clang Tidy

env:
  VCPKG_BINARY_SOURCES: 'clear;nuget,GitHub,readwrite'

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  workflow_dispatch:

jobs:
  build:
    name: "${{ matrix.configurations.name }} | ${{ matrix.configurations.config-preset }} | ${{ matrix.cmake-build-type }}"
    runs-on: ${{ matrix.configurations.os }}
    strategy:
      fail-fast: false
      matrix:
        configurations:
          - name: Ubuntu 20.04
            os: ubuntu-20.04
            config-preset: linux-clang
            build-preset: linux-clang-build
            test-preset: linux-clang-test
        cmake-build-type: [Release]

    steps:
    - uses: actions/checkout@v2

      - name: Create vcpkg build folder
        env:
          vcpkg_project_root: ${{runner.workspace}}/ms-pacman/build/${{ matrix.configurations.config-preset }}
        run: |
          mkdir -p ${{ env.vcpkg_project_root }}/vcpkg_installed
          mkdir -p ${{ env.vcpkg_project_root }}/_deps

      - name: Cache vcpkg
        uses: actions/cache@v2
        env:
          vcpkg_project_root: ${{runner.workspace}}/ms-pacman/build/${{ matrix.configurations.config-preset }}
          cache-name: vcpkg-modules
        with:
          path: |
            /home/runner/.cache/vcpkg
            ${{ env.vcpkg_project_root }}/vcpkg_installed
            ${{ env.vcpkg_project_root }}/_deps
          key: ${{ matrix.configurations.os }}-${{ matrix.configurations.config-preset }}-${{ matrix.cmake-build-type }}-${{ hashFiles('vcpkg.json') }}-${{ hashFiles('cmake/vcpkg.cmake') }}

      - name: Install Linux dependencies
        if: matrix.configurations.os == 'ubuntu-20.04'
        run: sudo apt-get update && sudo apt-get install -y libx11-dev libxrandr-dev libxi-dev libgl1-mesa-dev libudev-dev clang-12 make ninja-build cmake

      - name: Configure CMake
      working-directory: build
      run: cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON ..

      - name: Run clang-tidy
        working-directory: build
        run: run-clang-tidy
